// Generated by CoffeeScript 1.9.2
(function() {
  var FLAGS, MULTIPLE, SIMPLE,
    hasProp = {}.hasOwnProperty;

  FLAGS = {
    "noGlobal": "no-global",
    "noUnused": "no-unused",
    "noRedefined": "no-redefined",
    "noUnusedArgs": "no-unused-args",
    "noUnusedSecondaries": "no-unused-secondaries",
    "noUnusedGlobals": "no-unused-globals",
    "compat": "compat",
    "allowDefined": "allow-defined",
    "allowDefinedTop": "allow-defined-top",
    "module": "module",
    "noInline": "no-inline",
    "noConfig": "no-config",
    "noCache": "no-cache"
  };

  SIMPLE = {
    "std": "std",
    "config": "config",
    "cache": "cache"
  };

  MULTIPLE = {
    "globals": "globals",
    "readGlobals": "read-globals",
    "newGlobals": "new-globals",
    "newReadGlobals": "new-read-globals",
    "ignore": "ignore",
    "enable": "enable",
    "only": "only"
  };

  module.exports = function(options) {
    var args, i, key, len, ref, value;
    args = [];
    for (key in FLAGS) {
      if (options[key]) {
        args.push("--" + FLAGS[key]);
      }
    }
    for (key in SIMPLE) {
      if (!hasProp.call(SIMPLE, key)) continue;
      if (options[key]) {
        args.push("--" + SIMPLE[key]);
        args.push(options[key]);
      }
    }
    if (options.jobs && options.jobs > 1) {
      args.push("--jobs");
      args.push(options.jobs);
    }
    for (key in MULTIPLE) {
      if (!hasProp.call(MULTIPLE, key)) continue;
      if (options[key] && options[key].length) {
        args.push("--" + MULTIPLE[key]);
        ref = options[key];
        for (i = 0, len = ref.length; i < len; i++) {
          value = ref[i];
          args.push(value);
        }
      }
    }
    return args;
  };

}).call(this);
